# SPDX-FileCopyrightText: 2021 Eduard Wolf
#
# SPDX-License-Identifier: Apache-2.0

name: "Upgrade Gradle"
description: "Upgrade the used gradle wrapper to the current version"
inputs:
  distribution-type:
    description: >
      The used distribution type for the wrapper
      Possible values: bin, all, default (action doesn't specify the distribution type explicitly)
      Default: default
    required: false
    default: "default"
  validate-distribution-checksum:
    description: >
      Whether the update should retrieve distribution checksums and update the wrapper with these set, causing the
      wrapper to validate distribution integrity on all future installs.
      Possible values: true, false
      Default: false
    required: false
    default: "false"
  release-channel:
    description: >
      The used release channel to load the current version from.
      Possible values: current, release-candidate, nightly, release-nightly
      Default: current
    required: false
    default: "current"
  working-directory:
    description: >
      The working directory must contain the `gradlew` file
      Default: .
    required: false
    default: "./"
outputs:
  gradle-version:
    description: "the latest gradle version"
    value: ${{ steps.upgrade-gradle.outputs.gradle-version }}
  gradle-distribution-sha256-sum:
    description: "the sha256 checksum of the determined version, if distribution checksum validation enabled."
    value: ${{ steps.upgrade-gradle.outputs.gradle-distribution-sha256-sum }}
  version-information:
    description: "the version information of the latest gradle version formatted for usage in a pull request body"
    value: ${{ steps.upgrade-gradle.outputs.version-information }}
  fixed-issues:
    description: "the fixed issues of the latest gradle version"
    value: ${{ steps.upgrade-gradle.outputs.fixed-issues }}
  known-issues:
    description: "the known issues of the latest gradle version"
    value: ${{ steps.upgrade-gradle.outputs.known-issues }}

runs:
  using: composite
  steps:
    - run: ${{ github.action_path }}/upgrade-gradle.sh ${{ inputs.distribution-type }} ${{ inputs.release-channel }} ${{ inputs.validate-distribution-checksum }}
      id: upgrade-gradle
      working-directory: ${{ inputs.working-directory }}
      shell: bash

branding:
  icon: arrow-up-circle
  color: green
